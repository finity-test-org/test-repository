name: Sync Label to Status

on:
  issues:
    types: [labeled]

jobs:
  sync-label-to-status:
    permissions: write-all
    runs-on: ubuntu-latest
    if: startsWith(github.event.label.name, 'Status:')
    steps:
      - name: Move issue to appropriate status in project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('== Starting Label to Status Workflow ==');
            const payload = context.payload;
            console.log(payload);
            const issue = payload.issue;
            const label = payload.label;
            const statusString = label.name.replace('Status:', '').trim();
            const organization = payload.organization;

            console.log('== Starting Label to Status Workflow ==');
            console.log(`Event type: ${payload.action}`);
            console.log(`Label: ${label.name}`);
            console.log(`Extracted status: "${statusString}"`);
            console.log(`Organization: ${organization.login}`);

            console.log('Querying for projects containing this issue...');

            // Find the project ID
            const projectsQuery = `
              query ($ORGANIZATION: String!) {
                organization(login: $ORGANIZATION) {
                  projectsV2(first: 20) {
                    nodes {
                      id
                      title
                    }
                  }
                }
              }
            `;

            let projectsResult;
            try {
              projectsResult = await github.graphql(projectsQuery, {
                ORGANIZATION: organization.login
              });
              console.log('Projects query successful');
            } catch (error) {
              console.error(`GraphQL projects query error: ${error.message}`);
              console.error(`Error details: ${JSON.stringify(error, null, 2)}`);
              return;
            }

            console.log(projectsResult);

            console.log(`Raw projects data: ${JSON.stringify(projectsResult, null, 2)}`);
